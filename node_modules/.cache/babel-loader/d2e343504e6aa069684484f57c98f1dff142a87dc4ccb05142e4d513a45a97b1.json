{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/react-learn/my-messenger-app/src/components/FriendsList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Typography, List, ListItem, ListItemAvatar, Avatar } from \"@mui/material\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FriendsList(props) {\n  _s();\n  const {\n    friends,\n    setSelectedFriend\n  } = props;\n  const [showList, setShowList] = useState(false);\n  const getInitials = name => {\n    return name.split(\" \").map(word => word[0]).join(\"\").toUpperCase();\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"200px\",\n    zIndex: 2,\n    height: showList ? \"80%\" : \"5%\",\n    position: \"fixed\",\n    bottom: 0,\n    margin: \"0 auto\",\n    bgcolor: \"#f5f5f5\",\n    p: 2,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      onClick: () => setShowList(prev => !prev),\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), showList ? /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), showList && /*#__PURE__*/_jsxDEV(List, {\n      children: friends.map(friend => /*#__PURE__*/_jsxDEV(ListItem, {\n        // button\n        // selected={selectedFriend?.id === friend.id}\n        onClick: () => setSelectedFriend(friend),\n        sx: {\n          cursor: \"pointer\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: getInitials(friend.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: friend.name\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, friend.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(FriendsList, \"J2rQ6tivoc+QXH2xyFTEW6HgXco=\");\n_c = FriendsList;\nvar _c;\n$RefreshReg$(_c, \"FriendsList\");","map":{"version":3,"names":["React","useState","Box","Typography","List","ListItem","ListItemAvatar","Avatar","KeyboardArrowUpIcon","KeyboardArrowDownIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","FriendsList","props","_s","friends","setSelectedFriend","showList","setShowList","getInitials","name","split","map","word","join","toUpperCase","width","zIndex","height","position","bottom","margin","bgcolor","p","children","style","display","justifyContent","onClick","prev","variant","fileName","_jsxFileName","lineNumber","columnNumber","friend","sx","cursor","id","_c","$RefreshReg$"],"sources":["/home/user/Desktop/react-learn/my-messenger-app/src/components/FriendsList.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar\n} from \"@mui/material\";\nimport { Friend, Message } from \"../types\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\n\nexport default function FriendsList(props: {\n  friends: Friend[];\n  setSelectedFriend: any;\n}) {\n  const { friends, setSelectedFriend } = props;\n  const [showList, setShowList] = useState<boolean>(false);\n  const getInitials = (name: string) => {\n    return name\n      .split(\" \")\n      .map(word => word[0])\n      .join(\"\")\n      .toUpperCase();\n  };\n  return (\n    <Box\n      width=\"200px\"\n      zIndex={2}\n      height={showList ? \"80%\" : \"5%\"}\n      position={\"fixed\"}\n      bottom={0}\n      margin={\"0 auto\"}\n      bgcolor=\"#f5f5f5\"\n      p={2}\n    >\n      <Box\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        onClick={() => setShowList(prev => !prev)}\n      >\n        <Typography variant=\"h6\">Friends</Typography>\n        {showList ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />}\n      </Box>\n      {showList && (\n        <List>\n          {friends.map((friend: Friend) => (\n            <ListItem\n              key={friend.id}\n              // button\n              // selected={selectedFriend?.id === friend.id}\n              onClick={() => setSelectedFriend(friend)}\n              sx={{ cursor: \"pointer\" }}\n            >\n              <ListItemAvatar>\n                <Avatar>{getInitials(friend.name)}</Avatar>\n              </ListItemAvatar>\n              <>{friend.name}</>\n              <hr />\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}