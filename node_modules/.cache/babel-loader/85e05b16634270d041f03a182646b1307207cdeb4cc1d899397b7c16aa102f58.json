{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/react-learn/my-messenger-app/src/components/FriendsList.tsx\";\nimport React from \"react\";\nimport { Box, Typography, List, ListItem } from \"@mui/material\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FriendsList(props) {\n  const {\n    friends,\n    setSelectedFriend\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"200px\",\n    bgcolor: \"#f5f5f5\",\n    p: 2,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: friends.map(friend => /*#__PURE__*/_jsxDEV(ListItem, {\n        // button\n        // selected={selectedFriend?.id === friend.id}\n        onClick: () => setSelectedFriend(friend),\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: friend.name\n        }, void 0, false)\n      }, friend.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = FriendsList;\nvar _c;\n$RefreshReg$(_c, \"FriendsList\");","map":{"version":3,"names":["React","Box","Typography","List","ListItem","KeyboardArrowUpIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","FriendsList","props","friends","setSelectedFriend","width","bgcolor","p","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","friend","onClick","name","id","_c","$RefreshReg$"],"sources":["/home/user/Desktop/react-learn/my-messenger-app/src/components/FriendsList.tsx"],"sourcesContent":["import React from \"react\";\nimport { Box, Typography, List, ListItem } from \"@mui/material\";\nimport { Friend, Message } from \"../types\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\n\nexport default function FriendsList(props: {\n  friends: Friend[];\n  setSelectedFriend: any;\n}) {\n  const { friends, setSelectedFriend } = props;\n  return (\n    <Box width=\"200px\" bgcolor=\"#f5f5f5\" p={2}>\n      <Typography variant=\"h6\">Friends</Typography>\n      <KeyboardArrowUpIcon />\n      <List>\n        {friends.map((friend: Friend) => (\n          <ListItem\n            key={friend.id}\n            // button\n            // selected={selectedFriend?.id === friend.id}\n            onClick={() => setSelectedFriend(friend)}\n          >\n            <>{friend.name}</>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,eAAe;AAE/D,OAAOC,mBAAmB,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtE,eAAe,SAASC,WAAWA,CAACC,KAGnC,EAAE;EACD,MAAM;IAAEC,OAAO;IAAEC;EAAkB,CAAC,GAAGF,KAAK;EAC5C,oBACEJ,OAAA,CAACN,GAAG;IAACa,KAAK,EAAC,OAAO;IAACC,OAAO,EAAC,SAAS;IAACC,CAAC,EAAE,CAAE;IAAAC,QAAA,gBACxCV,OAAA,CAACL,UAAU;MAACgB,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC7Cf,OAAA,CAACF,mBAAmB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvBf,OAAA,CAACJ,IAAI;MAAAc,QAAA,EACFL,OAAO,CAACW,GAAG,CAAEC,MAAc,iBAC1BjB,OAAA,CAACH,QAAQ;QAEP;QACA;QACAqB,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAACW,MAAM,CAAE;QAAAP,QAAA,eAEzCV,OAAA,CAAAE,SAAA;UAAAQ,QAAA,EAAGO,MAAM,CAACE;QAAI,gBAAG;MAAC,GALbF,MAAM,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMN,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACM,EAAA,GAvBuBlB,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}