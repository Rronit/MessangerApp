{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/react-learn/my-messenger-app/src/components/ChatWindow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Box, Typography, TextField, Button, Paper, IconButton, Avatar } from \"@mui/material\";\nimport { ChatContainer, ChatHeader } from \"./styles\";\nimport { getInitials } from \"./FriendsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatWindow(props) {\n  _s();\n  const {\n    selectedFriend,\n    messages,\n    setMessages\n  } = props;\n  const [input, setInput] = useState(\"\");\n  const currentMessages = selectedFriend ? messages[selectedFriend.id] || [] : [];\n  const handleSend = () => {\n    if (!input.trim() || !selectedFriend) return;\n    setMessages(prev => ({\n      ...prev,\n      [selectedFriend.id]: [...(prev[selectedFriend.id] || []), {\n        sender: \"me\",\n        text: input\n      }]\n    }));\n    setInput(\"\");\n  };\n  if (!selectedFriend) {\n    return null;\n  }\n  return (\n    /*#__PURE__*/\n    // <Box flex={1} p={2} display=\"flex\" width={400} flexDirection=\"column\">\n    _jsxDEV(ChatContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          children: getInitials(selectedFriend.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Chat with \", selectedFriend === null || selectedFriend === void 0 ? void 0 : selectedFriend.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: () => setShowChat(false),\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          flex: 1,\n          p: 2,\n          overflowY: \"auto\",\n          mb: 2,\n          backgroundColor: \"#fafafa\"\n        },\n        children: currentMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: msg.sender === \"me\" ? \"right\" : \"left\",\n          mb: 1,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              display: \"inline-block\",\n              px: 1.5,\n              py: 1,\n              borderRadius: 2,\n              backgroundColor: msg.sender === \"me\" ? \"#1976d2\" : \"#e0e0e0\",\n              color: msg.sender === \"me\" ? \"#fff\" : \"#000\"\n            },\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          size: \"small\",\n          placeholder: \"Type a message\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => {\n            if (e.key === \"Enter\") handleSend();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(ChatWindow, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n_c = ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","CloseIcon","Box","Typography","TextField","Button","Paper","IconButton","Avatar","ChatContainer","ChatHeader","getInitials","jsxDEV","_jsxDEV","ChatWindow","props","_s","selectedFriend","messages","setMessages","input","setInput","currentMessages","id","handleSend","trim","prev","sender","text","children","name","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","size","onClick","setShowChat","fontSize","sx","flex","p","overflowY","mb","backgroundColor","map","msg","index","textAlign","display","px","py","borderRadius","color","gap","fullWidth","placeholder","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["/home/user/Desktop/react-learn/my-messenger-app/src/components/ChatWindow.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nimport {\n  Box,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  TextField,\n  Button,\n  Paper,\n  IconButton,\n  Avatar\n} from \"@mui/material\";\nimport { Friend, Message, MessageStore } from \"../types\";\nimport { ChatContainer, ChatHeader } from \"./styles\";\nimport { getInitials } from \"./FriendsList\";\n\nexport default function ChatWindow(props: {\n  selectedFriend: Friend | null;\n  messages: MessageStore;\n  setMessages: any;\n}) {\n  const { selectedFriend, messages, setMessages } = props;\n  const [input, setInput] = useState(\"\");\n\n  const currentMessages = selectedFriend\n    ? messages[selectedFriend.id] || []\n    : [];\n\n  const handleSend = () => {\n    if (!input.trim() || !selectedFriend) return;\n\n    setMessages((prev: MessageStore) => ({\n      ...prev,\n      [selectedFriend.id]: [\n        ...(prev[selectedFriend.id] || []),\n        { sender: \"me\", text: input }\n      ]\n    }));\n    setInput(\"\");\n  };\n  if (!selectedFriend) {\n    return null;\n  }\n  return (\n    // <Box flex={1} p={2} display=\"flex\" width={400} flexDirection=\"column\">\n    <ChatContainer>\n      {/* Header */}\n      <ChatHeader>\n        <Avatar>{getInitials(selectedFriend.name)}</Avatar>\n        <Typography variant=\"h6\" gutterBottom>\n          Chat with {selectedFriend?.name}\n        </Typography>\n        <IconButton size=\"small\" onClick={() => setShowChat(false)}>\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      </ChatHeader>\n\n      <Paper\n        variant=\"outlined\"\n        sx={{\n          flex: 1,\n          p: 2,\n          overflowY: \"auto\",\n          mb: 2,\n          backgroundColor: \"#fafafa\"\n        }}\n      >\n        {currentMessages.map((msg, index) => (\n          <Box\n            key={index}\n            textAlign={msg.sender === \"me\" ? \"right\" : \"left\"}\n            mb={1}\n          >\n            <Typography\n              variant=\"body2\"\n              sx={{\n                display: \"inline-block\",\n                px: 1.5,\n                py: 1,\n                borderRadius: 2,\n                backgroundColor: msg.sender === \"me\" ? \"#1976d2\" : \"#e0e0e0\",\n                color: msg.sender === \"me\" ? \"#fff\" : \"#000\"\n              }}\n            >\n              {msg.text}\n            </Typography>\n          </Box>\n        ))}\n      </Paper>\n\n      {/* Input */}\n      <Box display=\"flex\" gap={1}>\n        <TextField\n          fullWidth\n          size=\"small\"\n          placeholder=\"Type a message\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          onKeyDown={e => {\n            if (e.key === \"Enter\") handleSend();\n          }}\n        />\n        <Button variant=\"contained\" onClick={handleSend}>\n          Send\n        </Button>\n      </Box>\n    </ChatContainer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}