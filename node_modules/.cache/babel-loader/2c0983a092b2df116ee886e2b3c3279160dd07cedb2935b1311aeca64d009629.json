{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/react-learn/my-messenger-app/src/components/FriendsList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Typography, List, ListItem, ListItemAvatar, Avatar, ListItemText, Divider } from \"@mui/material\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { FriendsListStyled, ListHeader, ScrollableList } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getInitials = name => {\n  return name.split(\" \").map(word => word[0]).join(\"\").toUpperCase();\n};\nexport default function FriendsList(props) {\n  _s();\n  const {\n    friends,\n    setSelectedFriend,\n    messages\n  } = props;\n  const [showList, setShowList] = useState(true);\n  return /*#__PURE__*/_jsxDEV(FriendsListStyled, {\n    sx: {\n      height: showList ? \"80%\" : \"10%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ListHeader, {\n      onClick: () => setShowList(prev => !prev),\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), showList ? /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), showList && /*#__PURE__*/_jsxDEV(ScrollableList, {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: friends.map((friend, index) => {\n          var _messages$friend$id;\n          const lastMessage = (_messages$friend$id = messages[friend.id]) === null || _messages$friend$id === void 0 ? void 0 : _messages$friend$id.slice(-1)[0];\n          const previewText = lastMessage ? lastMessage.text.slice(0, 30) + (lastMessage.text.length > 30 ? \"…\" : \"\") : \"\";\n          // const time = lastMessage ? format(new Date(), \"p\") : \"\"; // Replace `new Date()` with actual timestamp if available\n          return /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              // button\n              // selected={selectedFriend?.id === friend.id}\n              onClick: () => {\n                setSelectedFriend(friend);\n              },\n              sx: {\n                cursor: \"pointer\",\n                paddingLeft: 0,\n                paddingRight: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: getInitials(friend.name)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    fontWeight: 600,\n                    children: friend.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 25\n                }, this),\n                secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  noWrap: true,\n                  children: previewText || \"No messages yet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)]\n            }, friend.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), index < friends.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n              component: \"li\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 50\n            }, this)]\n          }, friend.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(FriendsList, \"QgVZU2tQ+PBDSJ8NlC0b/TNeqTg=\");\n_c = FriendsList;\nvar _c;\n$RefreshReg$(_c, \"FriendsList\");","map":{"version":3,"names":["React","useState","Box","Typography","List","ListItem","ListItemAvatar","Avatar","ListItemText","Divider","KeyboardArrowUpIcon","KeyboardArrowDownIcon","FriendsListStyled","ListHeader","ScrollableList","jsxDEV","_jsxDEV","getInitials","name","split","map","word","join","toUpperCase","FriendsList","props","_s","friends","setSelectedFriend","messages","showList","setShowList","sx","height","children","onClick","prev","variant","fileName","_jsxFileName","lineNumber","columnNumber","friend","index","_messages$friend$id","lastMessage","id","slice","previewText","text","length","cursor","paddingLeft","paddingRight","primary","display","justifyContent","alignItems","fontWeight","secondary","color","noWrap","component","_c","$RefreshReg$"],"sources":["/home/user/Desktop/react-learn/my-messenger-app/src/components/FriendsList.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  Divider\n} from \"@mui/material\";\nimport { Friend, Message, MessageStore } from \"../types\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { FriendsListStyled, ListHeader, ScrollableList } from \"./styles\";\n\nexport const getInitials = (name: string) => {\n  return name\n    .split(\" \")\n    .map(word => word[0])\n    .join(\"\")\n    .toUpperCase();\n};\n\nexport default function FriendsList(props: {\n  friends: Friend[];\n  setSelectedFriend: any;\n  messages: MessageStore;\n}) {\n  const { friends, setSelectedFriend, messages } = props;\n  const [showList, setShowList] = useState<boolean>(true);\n\n  return (\n    <FriendsListStyled\n      sx={{\n        height: showList ? \"80%\" : \"10%\"\n      }}\n    >\n      <ListHeader onClick={() => setShowList(prev => !prev)}>\n        <Typography variant=\"h6\">Friends</Typography>\n        {showList ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />}\n      </ListHeader>\n      <Divider />\n      {showList && (\n        <ScrollableList>\n          <List>\n            {friends.map((friend: Friend, index: number) => {\n              const lastMessage = messages[friend.id]?.slice(-1)[0];\n              const previewText = lastMessage\n                ? lastMessage.text.slice(0, 30) +\n                  (lastMessage.text.length > 30 ? \"…\" : \"\")\n                : \"\";\n              // const time = lastMessage ? format(new Date(), \"p\") : \"\"; // Replace `new Date()` with actual timestamp if available\n              return (\n                <Box key={friend.id}>\n                  <ListItem\n                    key={friend.id}\n                    // button\n                    // selected={selectedFriend?.id === friend.id}\n                    onClick={() => {\n                      setSelectedFriend(friend);\n                    }}\n                    sx={{ cursor: \"pointer\", paddingLeft: 0, paddingRight: 0 }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar>{getInitials(friend.name)}</Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <Box\n                          display=\"flex\"\n                          justifyContent=\"space-between\"\n                          alignItems=\"center\"\n                        >\n                          <Typography fontWeight={600}>\n                            {friend.name}\n                          </Typography>\n                          {/* <Typography variant=\"caption\" color=\"text.secondary\">\n                        {time}\n                      </Typography> */}\n                        </Box>\n                      }\n                      secondary={\n                        <Typography\n                          variant=\"body2\"\n                          color=\"text.secondary\"\n                          noWrap\n                        >\n                          {previewText || \"No messages yet\"}\n                        </Typography>\n                      }\n                    />\n                  </ListItem>\n                  {index < friends.length - 1 && <Divider component=\"li\" />}\n                </Box>\n              );\n            })}\n          </List>\n        </ScrollableList>\n      )}\n    </FriendsListStyled>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}